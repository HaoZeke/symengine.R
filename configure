#!/bin/sh

echo ====== configuring symengine R package ======

# Check working directory
if [ ! -f ./DESCRIPTION ]; then
    echo Running in wrong directory `pwd`
    exit 1
fi

# Check sh
echo == $SHELL
$SHELL --version

# Check cmake
echo == cmake:
which cmake
if [ $? -ne 0 ]; then
    echo >&2 "cmake is not installed."
    exit 1
fi
cmake --version

# Try force setting some CMAKE environment variables

echo == setting environment variables:
echo   CMAKE_C_COMPILER=$CC
export CMAKE_C_COMPILER=$CC
echo   CMAKE_CXX_COMPILER=$CXX
export CMAKE_CXX_COMPILER=$CXX

# set CMAKE_C/CXX_FLAGS and prepend CPPFLAGS
echo   CMAKE_C_FLAGS=$CFLAGS
export CMAKE_C_FLAGS=$CFLAGS
echo   CMAKE_C_FLAGS="$CPPFLAGS $CMAKE_C_FLAGS"
export CMAKE_C_FLAGS="$CPPFLAGS $CMAKE_C_FLAGS"
echo   CMAKE_CXX_FLAGS=$CXXFLAGS
export CMAKE_CXX_FLAGS=$CXXFLAGS
echo   CMAKE_CXX_FLAGS="$CPPFLAGS $CMAKE_CXX_FLAGS"
export CMAKE_CXX_FLAGS="$CPPFLAGS $CMAKE_CXX_FLAGS"

# LDFLAGS https://cmake.org/cmake/help/latest/envvar/LDFLAGS.html
echo   CMAKE_EXE_LINKER_FLAGS_INIT=$LDFLAGS
export CMAKE_EXE_LINKER_FLAGS_INIT=$LDFLAGS
echo   CMAKE_SHARED_LINKER_FLAGS_INIT=$LDFLAGS
export CMAKE_SHARED_LINKER_FLAGS_INIT=$LDFLAGS
echo   CMAKE_MODULE_LINKER_FLAGS_INIT=$LDFLAGS
export CMAKE_MODULE_LINKER_FLAGS_INIT=$LDFLAGS

#if cmake --find-package -DNAME=SymEngine -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=LINK >/dev/null 2>/dev/null; then
#    IF_SYMENGINE_EXISTS=true
#else
#    IF_SYMENGINE_EXISTS=false
#fi

## Use ./tools/SYMENGINE_BUNDLED file as indicator so that
## this won't run on CRAN machine.
if [ ! -f ./tools/SYMENGINE_BUNDLED ]; then
    echo ====== bundling SymEngine source
    ./tools/bundle_symengine_source.sh
    if [ $? -ne 0 ]; then
        echo "./tools/bundle_symengine_source.sh exited with non-zero status"
        exit 1
    fi
fi

## If SymEngine_DIR environment variable is not set, use src/upstream
if [ -z "$SymEngine_DIR" ]; then

    echo ====== running cmake

    PKG_DIR=`pwd`
    cd src/upstream

    cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DWITH_BFD=no \
        -DWITH_SYMENGINE_ASSERT=no \
        -DWITH_ECM=no \
        -DWITH_PRIMESIEVE=no \
        -DWITH_FLINT=no \
        -DWITH_ARB=no \
        -DWITH_TCMALLOC=no \
        -DWITH_OPENMP=no \
        -DWITH_PIRANHA=no \
        -DWITH_LLVM=no \
        -DWITH_MPFR=yes \
        -DWITH_MPC=no \
        -DINTEGER_CLASS=gmp \
        -DBUILD_TESTS=no \
        -DBUILD_BENCHMARKS=no \
        -DBUILD_SHARED_LIBS=no \
        .

    if [ $? -ne 0 ]; then
        exit 1
    fi

    cd $PKG_DIR

    SymEngine_DIR="$PKG_DIR"/src/upstream
    DO_UPSTREAM="do_upstream"
else
    # if SymEngine_DIR exists
    DO_UPSTREAM=
fi

cat src/Makevars.in | \
    sed "s:@@@SymEngine_DIR@@@:$SymEngine_DIR:g" | \
    sed "s:@@@DO_UPSTREAM@@@:$DO_UPSTREAM:g" \
    > src/Makevars

echo ====== configuring symengine R package DONE ======
